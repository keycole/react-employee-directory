{"version":3,"sources":["components/Header/index.js","components/Form/index.js","components/Table/index.js","utils/API.js","components/MainContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","Form","props","className","onChange","handleInputChange","value","name","type","placeholder","onClick","handleFormSubmit","Icon","sort","handleSort","icon","Table","console","log","results","filter","employee","first","toLowerCase","startsWith","last","map","result","i","key","width","src","picture","large","alt","email","phone","location","street","number","city","state","postcode","axios","get","MainContainer","generateUsers","API","then","res","firstSort","data","a","b","setState","catch","err","sortToggle","descendSort","ascendSort","ascendResults","descendResults","event","target","trim","preventDefault","this","React","Component","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d3611970.chunk.js","sourcesContent":["import React from 'react';\n//import Form from '../Form';\nimport './style.css';\n\nfunction Header() {\n    return (\n        <div id=\"pageHeader\">\n            <h1>Employee Directory</h1>\n            <h3>Hello... It is you I'm looking for...</h3>\n            {/* <Form /> */}\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './style.css';\n\nfunction Form(props) {\n    return (\n        <form className=\"employeeSearch\">\n            <label className=\"employeeSearch\">Search for your colleague:&nbsp;</label>\n            <input \n                 onChange={props.handleInputChange}\n                 value={props.value}\n                 name=\"name\"\n                type=\"text\"\n                className=\"employeeSearch\" placeholder=\"Name Here\" />\n            <button className=\"employeeSearch\"\n                onClick={props.handleFormSubmit}\n                >Submit</button>\n        </form>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faCoffee } from '@fortawesome/free-solid-svg-icons'\nimport './style.css';\n\nfunction Icon({ sort, handleSort }) {\n  return sort === \"ascend\" ?\n    <FontAwesomeIcon icon={[\"fas\", \"arrow-circle-down\"]} onClick={handleSort} />\n    : <FontAwesomeIcon icon={[\"fas\", \"arrow-circle-up\"]} onClick={handleSort} />\n  // if(sort===\"ascend\"){\n  //     //return <i className=\"fas fa-arrow-circle-down\" onClick={handleSort}></i>\n  //     return <FontAwesomeIcon icon={[\"fas\", \"arrow-circle-down\"]} onClick={handleSort}/>\n  // } else {\n  //     return <FontAwesomeIcon icon={[\"fas\", \"arrow-circle-up\"]} onClick={handleSort}/>\n  //     //<i className=\"fas fa-arrow-circle-up\" onClick={handleSort}></i>\n  // }\n}\n\nfunction Table(props) {\n  console.log(\"The props inside Table = \", props);\n  function checkName(employee) {\n    return ((employee.name.first).toLowerCase()).startsWith(props.name) || ((employee.name.last).toLowerCase()).startsWith(props.name)\n  }\n\n  console.log(\"The props.sort inside table = \", props.sort);\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <th>Face to a Name</th>\n          <th>First Name</th>\n          <th onClick={props.handleSort}>Last Name &nbsp;&nbsp;\n                    {/* {props.sort === \"ascend\" \n                    ? <i className=\"fas fa-arrow-circle-down\" onClick={props.handleSort}></i> \n                    :  <i className=\"fas fa-arrow-circle-up\" onClick={props.handleSort}></i>} */}\n            <Icon sort={props.sort} handleSort={props.handleSort} />\n          </th>\n          <th>Email</th>\n          <th>Phone Number</th>\n          <th>Address</th>\n        </tr>\n        {props.name ? props.results.filter(checkName)\n          .map((result, i) => {\n            return (\n              <tr key={i}>\n                <td>\n                  <div id=\"photoDiv\" width=\"50px\">\n                    <img\n                      src={result.picture.large}\n                      alt=\"{result.name.first + ' ' + result.name.last}\"\n                      width=\"50px\"\n                    />\n                  </div>\n                </td>\n                <td>{result.name.first}</td>\n                <td>{result.name.last}</td>\n                <td>{result.email}</td>\n                <td>{result.phone}</td>\n                <td>\n                  {result.location.street.number + ' ' + result.location.street.name}<br />\n                  {result.location.city + ', ' + result.location.state + ' ' + result.location.postcode}\n                </td>\n              </tr>\n            )\n          }) : props.results.map((result, i) => (\n            <tr key={i}>\n              <td>\n                <div id=\"photoDiv\" width=\"50px\">\n                  <img\n                    src={result.picture.large}\n                    alt=\"{result.name.first + ' ' + result.name.last}\"\n                    width=\"50px\"\n                  />\n                </div>\n              </td>\n              <td>{result.name.first}</td>\n              <td>{result.name.last}</td>\n              <td>{result.email}</td>\n              <td>{result.phone}</td>\n              <td>\n                {result.location.street.number + ' ' + result.location.street.name}<br />\n                {result.location.city + ', ' + result.location.state + ' ' + result.location.postcode}\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;","import axios from \"axios\";\n\nexport default {\n    search: () => {\n      return axios.get(\"https://randomuser.me/api/?nat=us&inc=name,location,phone,email,picture&results=50\");\n    }\n  };","import React from 'react';\nimport Header from '../Header';\nimport Form from '../Form';\nimport Table from '../Table';\nimport API from '../../utils/API';\n\nclass MainContainer extends React.Component {\n    state = {\n        name:\"\",\n        results: [],\n        sort: \"ascend\"\n    }\n    \n    generateUsers = () => {\n            API.search()\n            .then(res => {\n                //Sort the returned list alphabetically by last name\n                let firstSort = (res.data.results).sort(function(a, b){\n                    if(a.name.last < b.name.last) { return -1; }\n                    if(a.name.last > b.name.last) { return 1; }\n                    return 0;\n                })\n                //Set the state results to equal the sorted list\n                this.setState({results: firstSort})\n            })\n            .catch(err => console.log(err)) \n    }\n    \n    sortToggle = () => {\n        if(this.state.sort === \"ascend\"){\n            this.descendSort();\n            this.setState({...this.state, sort: \"descend\"})\n        } else {\n            this.ascendSort();\n            this.setState({...this.state, sort: \"ascend\"})\n        }\n    }\n\n    ascendSort = () => {\n        let ascendResults = (this.state.results).sort(function(a, b){\n        if(a.name.last < b.name.last) { return -1; }\n        if(a.name.last > b.name.last) { return 1; }\n        return 0})\n        this.setState({...this.state, results: ascendResults})\n    }\n\n    descendSort = () => {\n            let descendResults = (this.state.results).sort(function(a, b){\n            if(b.name.last < a.name.last) { return -1; }\n            if(b.name.last > a.name.last) { return 1; }\n            return 0})\n            this.setState({...this.state, results: descendResults})\n        }\n\n    //On load call the generateUsers function\n    componentDidMount() {\n        this.generateUsers();\n    }\n\n    handleInputChange = event => {\n        const name = event.target.name;\n        const value = ((event.target.value).trim()).toLowerCase();\n\n        this.setState({\n          [name]: value,\n        });\n        console.log(\"this.state after handleInputChange = \", this.state);\n      };\n\n    handleSort = event => {\n        event.preventDefault();\n        console.log(\"Sort = \", this.state.sort);\n        this.sortToggle(this.state.sort)\n    }\n\n    render(){\n        return (\n            <div>\n                <Header />\n                <Form   name={this.state.name}\n                        handleFormSubmit={this.handleFormSubmit}\n                        handleInputChange={this.handleInputChange} />\n                <Table  name={this.state.name} \n                        results={this.state.results} \n                        sort={this.state.sort} \n                        handleSort={this.handleSort}/>\n                {console.log(\"The state inside the render return is \", this.state)}\n            </div>\n        );\n    }\n};\n\nexport default MainContainer;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport MainContainer from './components/MainContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}